.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CLIPME 1"
.TH CLIPME 1 "2010-05-02" "perl v5.10.1" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
clipme \- clipmed command line client
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
clipme [\-s /path/to/socket.sock] [\-f /path/to/clipmerc] [command [args]]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A c client for managing clipboard selection history. clipme
connect to clipmed socket, send the command and print the 
result in stdout.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-h\fR display a short help text
.PP
\&\fB\-s\fR specify an alternate socket (default is /var/tmp/$USER.cmsock)
.PP
\&\fB\-f\fR specify an alternate config file (default is ~/.clipmerc or ~/.config/clipmerc)
.SH "USAGE"
.IX Header "USAGE"
if a command is given clipme send the command to clipmed socket 
and print the result in stdin
.PP
Command should be one of :
.PP
\&\fBget [arg]\fR where arg is an integer. Return the \*(L"arg\*(R" entry from the
selection history. If arg is not given return all entries. 
First entry is 0.
.PP
\&\fBsiz\fR return the number of items store in selection history.
.PP
\&\fBdel\fR clear selection history.
.PP
\&\fBset arg\fR push the srting \*(L"arg\*(R" in selection history
.PP
\&\fBtwt arg\fR post item number \*(L"arg\*(R" on twitter. 
twt need user and pass to be set as daemon options.
This feature is just a devloppement sample for a future 
plugin architecture. It should change.
.PP
If no command is provide clipme wait for one in stdin
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Get all items from a daemon listening on /home/me/.me.sock
.PP
.Vb 1
\&        clipme \-s /home/me/.me.sock get
.Ve
.PP
On an alternate way
.PP
.Vb 1
\&        echo get | clipme \-s /home/me/.me.sock
.Ve
.PP
Clear the history an use /home/me/.clipme.conf as a config file
.PP
.Vb 1
\&        clipme \-f /home/me/.clipme.conf del
.Ve
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
clipme returns zero on succed and a non zero value on failure.
Most common error messages are \*(L"Protocol error\*(R" if an incorrect 
command is given and \*(L"Out of range clip\*(R" if a clip > siz is asked.
.SH "AUTHOR"
.IX Header "AUTHOR"
Joris Dedieu <joris@gmail.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIclipmed\fR\|(1), \fIclipmerc\fR\|(5), \fIxclip\fR\|(1), \fIxsel\fR\|(1)
